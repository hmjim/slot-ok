<?php
/**
 * 404 Monitor Settings Module
 *
 * @since 2.1
 */

if ( class_exists( 'SU_Module' ) ) {

	class SU_FofsSettings extends SU_Module {

		static function get_parent_module() {
			return 'fofs';
		}

		static function get_child_order() {
			return 20;
		}

		static function is_independent_module() {
			return false;
		}

		static function get_module_title() {
			return __( '404 Monitor Settings', 'seo-ultimate-pro' );
		}

		function get_module_subtitle() {
			return __( 'Settings', 'seo-ultimate-pro' );
		}

		function get_settings_key() {
			return '404s';
		}

		function get_default_settings() {

			return array(
				'exceptions'               => "*/favicon.ico\n*/apple-touch-icon.png\n*/pingserver.php\n*/xmlrpc.php"
			,
				'max_log_size'             => 100
			,
				'log_enabled'              => $this->flush_setting( 'log_hits', true, 'settings' )
			,
				'restrict_logging'         => true
			,
				'log_spiders'              => true
			,
				'log_errors_with_referers' => true
			,
				'default_404_page'  => ''

			);
		}

		function init() {
			add_filter( 'su_get_setting-404s-max_log_size', array( 'sustr', 'to_int' ) );
		}

		function admin_page_contents() {

			$this->admin_form_start();
			$this->checkbox( 'log_enabled', __( 'Continue monitoring for new 404 errors', 'seo-ultimate-pro' ), __( 'Monitoring Settings', 'seo-ultimate-pro' ) );
			$this->checkboxes( array(
				'restrict_logging'         => __( 'Only log these types of 404 errors:', 'seo-ultimate-pro' )
			,
				'log_spiders'              => array(
					'description' => __( '404s generated by search engine spiders', 'seo-ultimate-pro' ),
					'indent'      => true
				)
			,
				'log_errors_with_referers' => array(
					'description' => __( '404s with referring URLs', 'seo-ultimate-pro' ),
					'indent'      => true
				)
			), __( 'Log Restrictions', 'seo-ultimate-pro' ) );
			$this->textbox( 'max_log_size', __( 'Maximum Log Entries', 'seo-ultimate-pro' ), $this->get_default_setting( 'max_log_size' ) );
			$this->textarea( 'exceptions', __( 'URLs to Ignore', 'seo-ultimate-pro' ) . '<br /><small><em>' . __( '(Use * as wildcard)', 'seo-ultimate-pro' ) . '</em></small>', 15 );
			@$this->textbox( 'default_404_page', __( 'Default 404 Page', 'seo-ultimate-pro' ), $this->get_default_setting( 'default_404_page' ) );
			$this->admin_form_end();
			echo "<span style=\"padding: 5px;color: red; background-color: yellow;\"><strong>To use normal Wordpress default 404 behavior, remove the default 404 page and save settings.</strong></span>";
		}
	}

}
?>